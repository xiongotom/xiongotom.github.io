(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{160:function(t,e,i){"use strict";i.r(e);var a=i(0),n=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"unix哲学之组合原则"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#unix哲学之组合原则","aria-hidden":"true"}},[t._v("#")]),t._v(" Unix哲学之组合原则")]),t._v(" "),i("h2",{attrs:{id:"《unix编程艺术》读书笔记"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#《unix编程艺术》读书笔记","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("em",[t._v("《UNIX编程艺术》读书笔记")])]),t._v(" "),i("h2",{attrs:{id:"【声明】读书笔记包括原文摘抄和个人思考心得，原文一切版权归本书作者所有"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#【声明】读书笔记包括原文摘抄和个人思考心得，原文一切版权归本书作者所有","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("em",[t._v("【声明】读书笔记包括原文摘抄和个人思考心得，原文一切版权归本书作者所有")])]),t._v(" "),i("blockquote",[i("p",[t._v("设计时考虑拼接组合")])]),t._v(" "),i("p",[t._v("正文摘抄：")]),t._v(" "),i("ol",[i("li",[t._v("如果程序彼此间不能有效通讯，那么软件就难免陷入复杂度的泥沼。")]),t._v(" "),i("li",[t._v("在输入输出方面，Unix传统极力提倡采用简单、文本化、面向流、设备无关的格式。")]),t._v(" "),i("li",[t._v("Unix中，文本流之于工具，就如同在面向对象的环境中的消息之于对象。")]),t._v(" "),i("li",[t._v("GUI是个好东西。有时竭尽所能也不可避免复杂的二进制数据格式。但在做一个GUI前，最好还是应该想想可不可以把复杂的交互程序跟干粗活的算法程序分离开，每个部分单独成为一块，然后用一个简单的命令流或者是应用协议将其组合在一起。")])]),t._v(" "),i("p",[t._v("理解和感受：\n这个原则重点在于通讯，各个程序或者模块之间要能方便有效的交流，但同时也要确保各自的独立性：输入和输出是简单明了的，但内部的实现跟外界无关。这里也提到了Unix对应文本化的喜爱，文本可读、易于他人的理解，这也是开源精神的一种体现吧。")])])}],!1,null,null,null);n.options.__file="PhilCompose.md";e.default=n.exports}}]);